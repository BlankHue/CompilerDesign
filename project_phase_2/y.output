Terminals unused in grammar

   FOREACH
   IN
   NE


Grammar

    0 $accept: begin $end

    1 begin: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY

    5 declare: %empty
    6        | declaration SEMICOLON declare

    7 declaration: id COLON setval

    8 id: IDENT
    9   | IDENT COMMA id

   10 setval: INTEGER
   11       | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 statements: statement SEMICOLON statements
   13           | statement SEMICOLON

   14 statement: A
   15          | B
   16          | C
   17          | D
   18          | E
   19          | F
   20          | G
   21          | H

   22 A: var ASSIGN expression

   23 B: IF boolean_expr THEN statements ENDIF
   24  | IF boolean_expr THEN statements ELSE statements ENDIF

   25 C: WHILE boolean_expr BEGINLOOP statements ENDLOOP

   26 D: DO BEGINLOOP statements ENDLOOP WHILE boolean_expr

   27 E: READ var I

   28 I: %empty
   29  | COMMA var I

   30 F: WRITE var I

   31 G: CONTINUE

   32 H: RETURN expression

   33 boolean_expr: relation_exprr
   34             | boolean_expr OR relation_exprr

   35 relation_exprr: relation_expr
   36               | relation_exprr AND relation_expr

   37 relation_expr: rexpr
   38              | NOT rexpr

   39 rexpr: expression comp expression
   40      | TRUE
   41      | FALSE
   42      | L_PAREN boolean_expr R_PAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | LTE
   48     | GTE

   49 expression: mul_expr expradd

   50 expradd: %empty
   51        | PLUS mul_expr expradd
   52        | SUB mul_expr expradd

   53 mul_expr: term multi_term

   54 multi_term: %empty
   55           | MULT term multi_term
   56           | DIV term multi_term
   57           | MOD term multi_term

   58 term: posterm
   59     | SUB posterm
   60     | IDENT term_iden

   61 posterm: var
   62        | NUMBER
   63        | L_PAREN expression R_PAREN

   64 term_iden: L_PAREN term_ex R_PAREN
   65          | L_PAREN R_PAREN

   66 term_ex: expression
   67        | expression COMMA term_ex

   68 var: IDENT
   69    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 4 8 9 60 68 69
NUMBER (259) 11 62
FUNCTION (260) 4
BEGINPARAMS (261) 4
ENDPARAMS (262) 4
BEGINLOCALS (263) 4
ENDLOCALS (264) 4
BEGINBODY (265) 4
ENDBODY (266) 4
INTEGER (267) 10 11
ARRAY (268) 11
OF (269) 11
IF (270) 23 24
THEN (271) 23 24
ENDIF (272) 23 24
ELSE (273) 24
WHILE (274) 25 26
DO (275) 26
FOREACH (276)
IN (277)
BEGINLOOP (278) 25 26
ENDLOOP (279) 25 26
CONTINUE (280) 31
READ (281) 27
WRITE (282) 30
AND (283) 36
OR (284) 34
NOT (285) 38
TRUE (286) 40
FALSE (287) 41
RETURN (288) 32
SUB (289) 52 59
PLUS (290) 51
MULT (291) 55
DIV (292) 56
MOD (293) 57
EQ (294) 43
NE (295)
NEQ (296) 44
LT (297) 45
GT (298) 46
LTE (299) 47
GTE (300) 48
L_PAREN (301) 42 63 64 65
R_PAREN (302) 42 63 64 65
L_SQUARE_BRACKET (303) 11 69
R_SQUARE_BRACKET (304) 11 69
COLON (305) 7
SEMICOLON (306) 4 6 12 13
COMMA (307) 9 29 67
ASSIGN (308) 22


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
begin (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 3
function (57)
    on left: 4, on right: 3
declare (58)
    on left: 5 6, on right: 4 6
declaration (59)
    on left: 7, on right: 6
id (60)
    on left: 8 9, on right: 7 9
setval (61)
    on left: 10 11, on right: 7
statements (62)
    on left: 12 13, on right: 4 12 23 24 25 26
statement (63)
    on left: 14 15 16 17 18 19 20 21, on right: 12 13
A (64)
    on left: 22, on right: 14
B (65)
    on left: 23 24, on right: 15
C (66)
    on left: 25, on right: 16
D (67)
    on left: 26, on right: 17
E (68)
    on left: 27, on right: 18
I (69)
    on left: 28 29, on right: 27 29 30
F (70)
    on left: 30, on right: 19
G (71)
    on left: 31, on right: 20
H (72)
    on left: 32, on right: 21
boolean_expr (73)
    on left: 33 34, on right: 23 24 25 26 34 42
relation_exprr (74)
    on left: 35 36, on right: 33 34 36
relation_expr (75)
    on left: 37 38, on right: 35 36
rexpr (76)
    on left: 39 40 41 42, on right: 37 38
comp (77)
    on left: 43 44 45 46 47 48, on right: 39
expression (78)
    on left: 49, on right: 22 32 39 63 66 67 69
expradd (79)
    on left: 50 51 52, on right: 49 51 52
mul_expr (80)
    on left: 53, on right: 49 51 52
multi_term (81)
    on left: 54 55 56 57, on right: 53 55 56 57
term (82)
    on left: 58 59 60, on right: 53 55 56 57
posterm (83)
    on left: 61 62 63, on right: 58 59
term_iden (84)
    on left: 64 65, on right: 60
term_ex (85)
    on left: 66 67, on right: 64 67
var (86)
    on left: 68 69, on right: 22 27 29 30 61


State 0

    0 $accept: . begin $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    begin      go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: begin . $end

    $end  shift, and go to state 6


State 3

    1 begin: functions .

    $default  reduce using rule 1 (begin)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: begin $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declare)

    declare      go to state 11
    declaration  go to state 12
    id           go to state 13


State 10

    8 id: IDENT .
    9   | IDENT . COMMA id

    COMMA  shift, and go to state 14

    $default  reduce using rule 8 (id)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare . ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    6 declare: declaration . SEMICOLON declare

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: id . COLON setval

    COLON  shift, and go to state 17


State 14

    9 id: IDENT COMMA . id

    IDENT  shift, and go to state 10

    id  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS . BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 19


State 16

    6 declare: declaration SEMICOLON . declare

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declare)

    declare      go to state 20
    declaration  go to state 12
    id           go to state 13


State 17

    7 declaration: id COLON . setval

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22

    setval  go to state 23


State 18

    9 id: IDENT COMMA id .

    $default  reduce using rule 9 (id)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS . declare ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declare)

    declare      go to state 24
    declaration  go to state 12
    id           go to state 13


State 20

    6 declare: declaration SEMICOLON declare .

    $default  reduce using rule 6 (declare)


State 21

   10 setval: INTEGER .

    $default  reduce using rule 10 (setval)


State 22

   11 setval: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    7 declaration: id COLON setval .

    $default  reduce using rule 7 (declaration)


State 24

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 26


State 25

   11 setval: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 28


State 27

   11 setval: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY . statements ENDBODY

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 38
    statement   go to state 39
    A           go to state 40
    B           go to state 41
    C           go to state 42
    D           go to state 43
    E           go to state 44
    F           go to state 45
    G           go to state 46
    H           go to state 47
    var         go to state 48


State 29

   11 setval: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 49


State 30

   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 50

    $default  reduce using rule 68 (var)


State 31

   23 B: IF . boolean_expr THEN statements ENDIF
   24  | IF . boolean_expr THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57

    boolean_expr    go to state 58
    relation_exprr  go to state 59
    relation_expr   go to state 60
    rexpr           go to state 61
    expression      go to state 62
    mul_expr        go to state 63
    term            go to state 64
    posterm         go to state 65
    var             go to state 66


State 32

   25 C: WHILE . boolean_expr BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57

    boolean_expr    go to state 67
    relation_exprr  go to state 59
    relation_expr   go to state 60
    rexpr           go to state 61
    expression      go to state 62
    mul_expr        go to state 63
    term            go to state 64
    posterm         go to state 65
    var             go to state 66


State 33

   26 D: DO . BEGINLOOP statements ENDLOOP WHILE boolean_expr

    BEGINLOOP  shift, and go to state 68


State 34

   31 G: CONTINUE .

    $default  reduce using rule 31 (G)


State 35

   27 E: READ . var I

    IDENT  shift, and go to state 30

    var  go to state 69


State 36

   30 F: WRITE . var I

    IDENT  shift, and go to state 30

    var  go to state 70


State 37

   32 H: RETURN . expression

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    expression  go to state 72
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    var         go to state 66


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 73


State 39

   12 statements: statement . SEMICOLON statements
   13           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 40

   14 statement: A .

    $default  reduce using rule 14 (statement)


State 41

   15 statement: B .

    $default  reduce using rule 15 (statement)


State 42

   16 statement: C .

    $default  reduce using rule 16 (statement)


State 43

   17 statement: D .

    $default  reduce using rule 17 (statement)


State 44

   18 statement: E .

    $default  reduce using rule 18 (statement)


State 45

   19 statement: F .

    $default  reduce using rule 19 (statement)


State 46

   20 statement: G .

    $default  reduce using rule 20 (statement)


State 47

   21 statement: H .

    $default  reduce using rule 21 (statement)


State 48

   22 A: var . ASSIGN expression

    ASSIGN  shift, and go to state 75


State 49

   11 setval: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 76


State 50

   69 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    expression  go to state 77
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    var         go to state 66


State 51

   60 term: IDENT . term_iden
   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 78
    L_SQUARE_BRACKET  shift, and go to state 50

    $default  reduce using rule 68 (var)

    term_iden  go to state 79


State 52

   62 posterm: NUMBER .

    $default  reduce using rule 62 (posterm)


State 53

   38 relation_expr: NOT . rexpr

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57

    rexpr       go to state 80
    expression  go to state 62
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    var         go to state 66


State 54

   40 rexpr: TRUE .

    $default  reduce using rule 40 (rexpr)


State 55

   41 rexpr: FALSE .

    $default  reduce using rule 41 (rexpr)


State 56

   59 term: SUB . posterm

    IDENT    shift, and go to state 30
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 71

    posterm  go to state 81
    var      go to state 66


State 57

   42 rexpr: L_PAREN . boolean_expr R_PAREN
   63 posterm: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57

    boolean_expr    go to state 82
    relation_exprr  go to state 59
    relation_expr   go to state 60
    rexpr           go to state 61
    expression      go to state 83
    mul_expr        go to state 63
    term            go to state 64
    posterm         go to state 65
    var             go to state 66


State 58

   23 B: IF boolean_expr . THEN statements ENDIF
   24  | IF boolean_expr . THEN statements ELSE statements ENDIF
   34 boolean_expr: boolean_expr . OR relation_exprr

    THEN  shift, and go to state 84
    OR    shift, and go to state 85


State 59

   33 boolean_expr: relation_exprr .
   36 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 86

    $default  reduce using rule 33 (boolean_expr)


State 60

   35 relation_exprr: relation_expr .

    $default  reduce using rule 35 (relation_exprr)


State 61

   37 relation_expr: rexpr .

    $default  reduce using rule 37 (relation_expr)


State 62

   39 rexpr: expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 93


State 63

   49 expression: mul_expr . expradd

    SUB   shift, and go to state 94
    PLUS  shift, and go to state 95

    $default  reduce using rule 50 (expradd)

    expradd  go to state 96


State 64

   53 mul_expr: term . multi_term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 54 (multi_term)

    multi_term  go to state 100


State 65

   58 term: posterm .

    $default  reduce using rule 58 (term)


State 66

   61 posterm: var .

    $default  reduce using rule 61 (posterm)


State 67

   25 C: WHILE boolean_expr . BEGINLOOP statements ENDLOOP
   34 boolean_expr: boolean_expr . OR relation_exprr

    BEGINLOOP  shift, and go to state 101
    OR         shift, and go to state 85


State 68

   26 D: DO BEGINLOOP . statements ENDLOOP WHILE boolean_expr

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 102
    statement   go to state 39
    A           go to state 40
    B           go to state 41
    C           go to state 42
    D           go to state 43
    E           go to state 44
    F           go to state 45
    G           go to state 46
    H           go to state 47
    var         go to state 48


State 69

   27 E: READ var . I

    COMMA  shift, and go to state 103

    $default  reduce using rule 28 (I)

    I  go to state 104


State 70

   30 F: WRITE var . I

    COMMA  shift, and go to state 103

    $default  reduce using rule 28 (I)

    I  go to state 105


State 71

   63 posterm: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    expression  go to state 106
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    var         go to state 66


State 72

   32 H: RETURN expression .

    $default  reduce using rule 32 (H)


State 73

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declare ENDPARAMS BEGINLOCALS declare ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 74

   12 statements: statement SEMICOLON . statements
   13           | statement SEMICOLON .

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 107
    statement   go to state 39
    A           go to state 40
    B           go to state 41
    C           go to state 42
    D           go to state 43
    E           go to state 44
    F           go to state 45
    G           go to state 46
    H           go to state 47
    var         go to state 48


State 75

   22 A: var ASSIGN . expression

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    expression  go to state 108
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    var         go to state 66


State 76

   11 setval: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (setval)


State 77

   69 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 109


State 78

   64 term_iden: L_PAREN . term_ex R_PAREN
   65          | L_PAREN . R_PAREN

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71
    R_PAREN  shift, and go to state 110

    expression  go to state 111
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    term_ex     go to state 112
    var         go to state 66


State 79

   60 term: IDENT term_iden .

    $default  reduce using rule 60 (term)


State 80

   38 relation_expr: NOT rexpr .

    $default  reduce using rule 38 (relation_expr)


State 81

   59 term: SUB posterm .

    $default  reduce using rule 59 (term)


State 82

   34 boolean_expr: boolean_expr . OR relation_exprr
   42 rexpr: L_PAREN boolean_expr . R_PAREN

    OR       shift, and go to state 85
    R_PAREN  shift, and go to state 113


State 83

   39 rexpr: expression . comp expression
   63 posterm: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    LTE      shift, and go to state 91
    GTE      shift, and go to state 92
    R_PAREN  shift, and go to state 114

    comp  go to state 93


State 84

   23 B: IF boolean_expr THEN . statements ENDIF
   24  | IF boolean_expr THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 115
    statement   go to state 39
    A           go to state 40
    B           go to state 41
    C           go to state 42
    D           go to state 43
    E           go to state 44
    F           go to state 45
    G           go to state 46
    H           go to state 47
    var         go to state 48


State 85

   34 boolean_expr: boolean_expr OR . relation_exprr

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57

    relation_exprr  go to state 116
    relation_expr   go to state 60
    rexpr           go to state 61
    expression      go to state 62
    mul_expr        go to state 63
    term            go to state 64
    posterm         go to state 65
    var             go to state 66


State 86

   36 relation_exprr: relation_exprr AND . relation_expr

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57

    relation_expr  go to state 117
    rexpr          go to state 61
    expression     go to state 62
    mul_expr       go to state 63
    term           go to state 64
    posterm        go to state 65
    var            go to state 66


State 87

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 88

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 89

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 90

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 91

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


State 92

   48 comp: GTE .

    $default  reduce using rule 48 (comp)


State 93

   39 rexpr: expression comp . expression

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    expression  go to state 118
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    var         go to state 66


State 94

   52 expradd: SUB . mul_expr expradd

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    mul_expr  go to state 119
    term      go to state 64
    posterm   go to state 65
    var       go to state 66


State 95

   51 expradd: PLUS . mul_expr expradd

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    mul_expr  go to state 120
    term      go to state 64
    posterm   go to state 65
    var       go to state 66


State 96

   49 expression: mul_expr expradd .

    $default  reduce using rule 49 (expression)


State 97

   55 multi_term: MULT . term multi_term

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    term     go to state 121
    posterm  go to state 65
    var      go to state 66


State 98

   56 multi_term: DIV . term multi_term

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    term     go to state 122
    posterm  go to state 65
    var      go to state 66


State 99

   57 multi_term: MOD . term multi_term

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    term     go to state 123
    posterm  go to state 65
    var      go to state 66


State 100

   53 mul_expr: term multi_term .

    $default  reduce using rule 53 (mul_expr)


State 101

   25 C: WHILE boolean_expr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 124
    statement   go to state 39
    A           go to state 40
    B           go to state 41
    C           go to state 42
    D           go to state 43
    E           go to state 44
    F           go to state 45
    G           go to state 46
    H           go to state 47
    var         go to state 48


State 102

   26 D: DO BEGINLOOP statements . ENDLOOP WHILE boolean_expr

    ENDLOOP  shift, and go to state 125


State 103

   29 I: COMMA . var I

    IDENT  shift, and go to state 30

    var  go to state 126


State 104

   27 E: READ var I .

    $default  reduce using rule 27 (E)


State 105

   30 F: WRITE var I .

    $default  reduce using rule 30 (F)


State 106

   63 posterm: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 114


State 107

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 108

   22 A: var ASSIGN expression .

    $default  reduce using rule 22 (A)


State 109

   69 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 69 (var)


State 110

   65 term_iden: L_PAREN R_PAREN .

    $default  reduce using rule 65 (term_iden)


State 111

   66 term_ex: expression .
   67        | expression . COMMA term_ex

    COMMA  shift, and go to state 127

    $default  reduce using rule 66 (term_ex)


State 112

   64 term_iden: L_PAREN term_ex . R_PAREN

    R_PAREN  shift, and go to state 128


State 113

   42 rexpr: L_PAREN boolean_expr R_PAREN .

    $default  reduce using rule 42 (rexpr)


State 114

   63 posterm: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (posterm)


State 115

   23 B: IF boolean_expr THEN statements . ENDIF
   24  | IF boolean_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 129
    ELSE   shift, and go to state 130


State 116

   34 boolean_expr: boolean_expr OR relation_exprr .
   36 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 86

    $default  reduce using rule 34 (boolean_expr)


State 117

   36 relation_exprr: relation_exprr AND relation_expr .

    $default  reduce using rule 36 (relation_exprr)


State 118

   39 rexpr: expression comp expression .

    $default  reduce using rule 39 (rexpr)


State 119

   52 expradd: SUB mul_expr . expradd

    SUB   shift, and go to state 94
    PLUS  shift, and go to state 95

    $default  reduce using rule 50 (expradd)

    expradd  go to state 131


State 120

   51 expradd: PLUS mul_expr . expradd

    SUB   shift, and go to state 94
    PLUS  shift, and go to state 95

    $default  reduce using rule 50 (expradd)

    expradd  go to state 132


State 121

   55 multi_term: MULT term . multi_term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 54 (multi_term)

    multi_term  go to state 133


State 122

   56 multi_term: DIV term . multi_term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 54 (multi_term)

    multi_term  go to state 134


State 123

   57 multi_term: MOD term . multi_term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 54 (multi_term)

    multi_term  go to state 135


State 124

   25 C: WHILE boolean_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 125

   26 D: DO BEGINLOOP statements ENDLOOP . WHILE boolean_expr

    WHILE  shift, and go to state 137


State 126

   29 I: COMMA var . I

    COMMA  shift, and go to state 103

    $default  reduce using rule 28 (I)

    I  go to state 138


State 127

   67 term_ex: expression COMMA . term_ex

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 71

    expression  go to state 111
    mul_expr    go to state 63
    term        go to state 64
    posterm     go to state 65
    term_ex     go to state 139
    var         go to state 66


State 128

   64 term_iden: L_PAREN term_ex R_PAREN .

    $default  reduce using rule 64 (term_iden)


State 129

   23 B: IF boolean_expr THEN statements ENDIF .

    $default  reduce using rule 23 (B)


State 130

   24 B: IF boolean_expr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 140
    statement   go to state 39
    A           go to state 40
    B           go to state 41
    C           go to state 42
    D           go to state 43
    E           go to state 44
    F           go to state 45
    G           go to state 46
    H           go to state 47
    var         go to state 48


State 131

   52 expradd: SUB mul_expr expradd .

    $default  reduce using rule 52 (expradd)


State 132

   51 expradd: PLUS mul_expr expradd .

    $default  reduce using rule 51 (expradd)


State 133

   55 multi_term: MULT term multi_term .

    $default  reduce using rule 55 (multi_term)


State 134

   56 multi_term: DIV term multi_term .

    $default  reduce using rule 56 (multi_term)


State 135

   57 multi_term: MOD term multi_term .

    $default  reduce using rule 57 (multi_term)


State 136

   25 C: WHILE boolean_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 25 (C)


State 137

   26 D: DO BEGINLOOP statements ENDLOOP WHILE . boolean_expr

    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57

    boolean_expr    go to state 141
    relation_exprr  go to state 59
    relation_expr   go to state 60
    rexpr           go to state 61
    expression      go to state 62
    mul_expr        go to state 63
    term            go to state 64
    posterm         go to state 65
    var             go to state 66


State 138

   29 I: COMMA var I .

    $default  reduce using rule 29 (I)


State 139

   67 term_ex: expression COMMA term_ex .

    $default  reduce using rule 67 (term_ex)


State 140

   24 B: IF boolean_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 142


State 141

   26 D: DO BEGINLOOP statements ENDLOOP WHILE boolean_expr .
   34 boolean_expr: boolean_expr . OR relation_exprr

    OR  shift, and go to state 85

    $default  reduce using rule 26 (D)


State 142

   24 B: IF boolean_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 24 (B)
